{"version":3,"sources":["components/Navbar.js","context/alert/AlertContext.js","context/github/GithubContext.js","components/Search.js","components/Card.js","pages/Home.js","pages/About.js","components/Repos.js","pages/Profile.js","components/Alert.js","context/alert/alertReducer.js","context/types.js","context/alert/AlertState.js","context/github/GithubReducer.js","context/github/GithubState.js","context/Context.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","className","to","exact","AlertContext","createContext","GithubContext","Search","useState","inputValue","setValue","useContext","show","hide","github","type","placeholder","onKeyPress","event","key","clearUsers","trim","searchUsers","value","onChange","target","Card","user","src","avatar_url","alt","login","Home","users","loading","usersCard","map","i","About","Repos","repos","repo","href","html_url","rel","name","Profile","match","getUser","getRepos","urlName","params","useEffect","company","location","bio","blog","followers","public_repos","public_qists","following","style","width","Alert","alert","role","text","aria-label","onClick","aria-hidden","handlers","state","action","payload","alertReducer","DEFAULT","AlertState","children","useReducer","dispatch","Provider","githubReducer","withCreds","url","process","GithubState","a","setLoading","axios","get","data","items","console","error","Context","App","path","component","Boolean","window","hostname","app","StrictMode","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.f444c725.chunk.js","sourcesContent":["import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nexport const NavBar = () => (\r\n    <nav className=\"navbar navbar-dark bg-primary navbar-expand-lg\">\r\n        <div className=\"navbar-brand\">Github поиск</div>\r\n        <ul className=\"navbar-nav\">\r\n            <li className=\"nav-item\">\r\n                <NavLink to=\"/\" className=\"nav-link\" exact>Главная</NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <NavLink to=\"/about\" className=\"nav-link\">Информация</NavLink>\r\n            </li>\r\n        </ul> \r\n    </nav>\r\n)","import {createContext} from 'react';\r\n\r\nexport const AlertContext = createContext();","import {createContext} from 'react';\r\n\r\nexport const GithubContext = createContext();\r\n","import React, { useContext, useState } from 'react';\r\nimport { AlertContext } from './../context/alert/AlertContext';\r\nimport { GithubContext } from './../context/github/GithubContext';\r\n\r\nexport const Search = () => {\r\n    const [inputValue, setValue] = useState('');\r\n    const {show, hide} = useContext(AlertContext);\r\n    const github = useContext(GithubContext);\r\n\r\n    const onSubmit = event => {\r\n        if(event.key !== 'Enter') return;\r\n\r\n        github.clearUsers()\r\n\r\n        if(inputValue.trim()) {\r\n            hide()\r\n            github.searchUsers(inputValue.trim())\r\n        } else {\r\n            show('Введите данные пользователя', 'warning');\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"form-group\">\r\n            <input \r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Введите ник Пользователя\"\r\n                onKeyPress={onSubmit}\r\n                value={inputValue }\r\n                onChange={event => setValue(event.target.value)}\r\n            />\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport const Card = ({user}) => (\r\n    <div className=\"card\">\r\n        <img src={user.avatar_url} alt={user.login} className=\"card-img-top\" />\r\n        <div className=\"card-body\">\r\n            <h5 className=\"card-title\">{user.login}</h5>\r\n            <Link to={`/profile/${user.login}`} className=\"btn btn-primary\">Открыть</Link>\r\n        </div>\r\n    </div>\r\n)","import React, {useContext} from 'react';\r\nimport { Search } from './../components/Search';\r\nimport { Card } from './../components/Card';\r\nimport { GithubContext } from './../context/github/GithubContext';\r\n\r\nexport const Home = () => {\r\n    const {users, loading} = useContext(GithubContext)\r\n\r\n    const usersCard = users.map((user, i) => (\r\n        <div className=\"col-sm-4 mb-4\" key={i}>\r\n            <Card user={user}/>\r\n         </div>\r\n    ))\r\n\r\n    return (\r\n        <>\r\n            <Search />\r\n            <div className=\"row\">\r\n                {loading \r\n                    ? <p className=\"text-center\">Загруз...</p> \r\n                    : usersCard\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport const About = () => {\r\n    return (\r\n        <div className=\"jumbotron jumbotron-fluid\">\r\n            <div className=\"container\">\r\n                <h1 className=\"display-4\">Информация</h1>\r\n                <p className=\"lead\">Версия приложение: <strong>1.0.0</strong></p>\r\n            </div>\r\n         </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport const Repos = ({repos}) => (\r\n    <>\r\n        {repos.map((repo, i) => (\r\n            <div className=\"card mb-3\" key={i}>\r\n                <div className=\"card-body\">\r\n                    <h5>\r\n                        <a href={repo.html_url} target=\"_blank\" rel=\"noopener noreferrer\">{repo.name}</a>\r\n                    </h5>\r\n                </div>\r\n            </div>\r\n        ))}\r\n    </>\r\n)","import React, { useContext,  useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { GithubContext } from './../context/github/GithubContext';\r\nimport { Repos } from './../components/Repos';\r\n\r\n\r\nexport const Profile = ({match}) => {\r\n    const {getUser, getRepos, user, repos, loading} = useContext(GithubContext);\r\n    const urlName = match.params.name;\r\n\r\n    useEffect(() => {\r\n        getUser(urlName);\r\n        getRepos(urlName);\r\n        //eslint-disable-next-line\r\n    }, []);\r\n\r\n    if(loading) {\r\n        return <p className=\"text-center\">Загрузка...</p>;\r\n    }\r\n\r\n    const {\r\n        name, company, avatar_url, \r\n        location, bio, blog, \r\n        login, html_url, followers, \r\n        public_repos, public_qists,\r\n        following\r\n    } = user;\r\n\r\n    return (\r\n        <>\r\n            <Link to='/' className='btn btn-link'>На главную</Link>\r\n\r\n            <div className=\"card mb-4\">\r\n                <div className=\"card-body\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-3 text-center\">\r\n                            <img src={avatar_url} alt={name} style={{width: 150}}/>\r\n                            <h1>{name}</h1>\r\n                            {location && <p>Местоположение: {location}</p>}\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            {\r\n                                bio && <> \r\n                                    <h3>BIO</h3>\r\n                                    <p>{bio}</p>\r\n                                </>\r\n                            }\r\n                            <a href={html_url} target=\"_blank\" rel=\"noopener noreferrer\" className=\"btn btn-dark\">Открыть профиль</a>\r\n                            <ul>\r\n                                {\r\n                                    login && <li><strong>Username:</strong>{login}</li>\r\n                                }\r\n                                {\r\n                                    company && <li><strong>Компания:</strong>{company}</li>\r\n                                }\r\n                                {\r\n                                    blog && <li><strong>Website:</strong>{blog}</li>\r\n                                }\r\n                            </ul>\r\n                            <div className=\"badge badge-primary\">Подписчики: {followers}</div>\r\n                            <div className=\"badge badge-success\">Подписан: {following}</div>\r\n                            <div className=\"badge badge-info\">Репозитории: {public_repos}</div>\r\n                            <div className=\"badge badge-dark\">Gists: {public_qists}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Repos repos={repos} />\r\n        </>\r\n    )\r\n}","import React, { useContext } from 'react';\r\nimport { AlertContext } from './../context/alert/AlertContext';\r\n\r\nexport const Alert = () => {\r\n    const {alert, hide} = useContext(AlertContext);\r\n\r\n    if(!alert) return null;\r\n\r\n    return (\r\n        <div className={`alert alert-${alert.type || 'secondary'} alert-dismissible`} role=\"alert\">\r\n            {alert.text}\r\n            <button type=\"button\" className=\"close\" aria-label=\"Close\" onClick={hide}>\r\n                <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}","import { SHOW_ALERT, HIDE_ALERT } from './../types';\r\n\r\nconst handlers = {\r\n    [SHOW_ALERT]: (state, action) => action.payload,\r\n    [HIDE_ALERT]: () => null,\r\n    DEFAULT: state => state\r\n}\r\n\r\nexport const alertReducer = (state, action) => {\r\n    const handler = handlers[action.type] || handlers.DEFAULT\r\n    return handler(state, action)\r\n}\r\n","export const SHOW_ALERT = 'SHOW_ALERT';\r\nexport const HIDE_ALERT = 'HIDE_ALERT';\r\nexport const CLEAR_USERS = 'CLEAR_USERS';\r\nexport const GET_REPOS = 'GET_REPOS';\r\nexport const GET_USER = 'GET_USER';\r\nexport const SEARCH_USERS = 'SEARCH_USERS';\r\nexport const SET_LOADING = 'SET_LOADING';\r\n","import React, {useReducer} from 'react';\r\nimport { HIDE_ALERT } from '../types';\r\nimport { AlertContext } from './AlertContext';\r\nimport { alertReducer } from './alertReducer';\r\nimport { SHOW_ALERT } from './../types';\r\n\r\nexport const AlertState = ({children}) => {\r\n    const [state, dispatch] = useReducer(alertReducer, null);\r\n\r\n    const hide = () => dispatch({type: HIDE_ALERT});\r\n    \r\n    const show = (text, type='secondary') => dispatch({\r\n        type: SHOW_ALERT,\r\n        payload: {text, type}\r\n    });\r\n\r\n    return (\r\n        <AlertContext.Provider value={{\r\n            hide, show, alert: state\r\n        }}>\r\n            {children}\r\n        </AlertContext.Provider>\r\n    )\r\n}","import { GET_USER, SET_LOADING, CLEAR_USERS, GET_REPOS, SEARCH_USERS } from './../types';\r\n\r\nconst handlers = {\r\n    [SEARCH_USERS]: (state, {payload}) => ({...state, users: payload, loading: false}),\r\n    [GET_REPOS]: (state, {payload}) => ({...state, repos: payload, loading: false}),\r\n    [GET_USER]: (state, {payload}) => ({...state, user: payload, loading: false}),\r\n    [SET_LOADING]: state => ({...state, loading: true}),\r\n    [CLEAR_USERS]: state => ({...state, users: []}),\r\n    DEFAULT: state => state\r\n};\r\n\r\nexport const githubReducer = (state, action) => {\r\n    const handler = handlers[action.type] || handlers.DEFAULT;\r\n    return handler(state, action);\r\n}","import React, { useReducer } from 'react';\r\nimport axios from 'axios';\r\nimport { GithubContext } from './GithubContext';\r\nimport { githubReducer } from './GithubReducer';\r\nimport { SET_LOADING, CLEAR_USERS, GET_REPOS, GET_USER, SEARCH_USERS } from './../types';\r\n\r\nconst CLIENT_ID = process.env.REACT_APP_CLIENT_ID;\r\nconst CLIENT_SECRET = process.env.REACT_APP_CLIENT_SECRET;\r\n\r\nconst withCreds = url => {\r\n    return `${url}client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRET}`\r\n}\r\n\r\nexport const GithubState = ({children}) => {\r\n    const initialState = {\r\n        user: {},\r\n        users: [],\r\n        loading: false,\r\n        repos: []\r\n    }\r\n\r\n    const [state, dispatch] = useReducer(githubReducer, initialState);\r\n\r\n    const searchUsers = async value => {\r\n        setLoading();\r\n        try {\r\n            const {data} = await axios.get(withCreds(`https://api.github.com/search/users?q=${value}&`));  \r\n            dispatch({type: SEARCH_USERS, payload: data.items});\r\n        } catch (err) {\r\n            console.error(err)\r\n        }\r\n    }\r\n\r\n    const getUser = async name => {\r\n        setLoading();\r\n        try {\r\n            const {data} = await axios.get(withCreds(`https://api.github.com/users/${name}?`));   \r\n            dispatch({type: GET_USER, payload: data})\r\n        } catch (err) {\r\n            console.error(err)\r\n        }\r\n    }\r\n\r\n    const getRepos = async name => {\r\n        setLoading();\r\n        try {\r\n            const {data} = await axios.get(withCreds(`https://api.github.com/users/${name}/repos?per_page=5&`)); \r\n            dispatch({type: GET_REPOS, payload: data})\r\n        } catch (err) {\r\n            console.error(err)\r\n        }\r\n    }\r\n\r\n    const clearUsers = () =>  dispatch({type: CLEAR_USERS});\r\n\r\n    const setLoading = () =>  dispatch({type: SET_LOADING});\r\n\r\n    const {user, users, repos, loading} = state;\r\n\r\n    return (\r\n        <GithubContext.Provider value={{\r\n            setLoading, searchUsers, getRepos, getUser, clearUsers,\r\n            users, user, repos, loading\r\n        }}>\r\n            {children}\r\n        </GithubContext.Provider>\r\n    )\r\n}","import React from 'react';\r\nimport { AlertState } from './alert/AlertState';\r\nimport { GithubState } from './github/GithubState';\r\n\r\nexport const Context = ({children}) => (\r\n    <GithubState>\r\n        <AlertState>\r\n            {children}\r\n        </AlertState>\r\n    </GithubState>\r\n)","import React from 'react';\nimport { NavBar } from './components/Navbar';\nimport { Home } from './pages/Home';\nimport { Route, Switch, BrowserRouter } from 'react-router-dom';\nimport { About } from './pages/About';\nimport { Profile } from './pages/Profile';\nimport { Alert } from './components/Alert';\nimport { Context } from './context/Context';\n\n\nfunction App() {\n\treturn (\n\t\t<Context>\n\t\t\t<BrowserRouter>\n\t\t\t\t<NavBar />\n\t\t\t\t<div className=\"container pt-4\">\n\t\t\t\t\t<Alert alert={{text: 'test alert'}}/>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route exact path=\"/\" component={Home} />\n\t\t\t\t\t\t<Route path=\"/about\" component={About} />\n\t\t\t\t\t\t<Route path=\"/profile/:name\" component={Profile} />\n\t\t\t\t\t</Switch>\n\t\t\t\t</div>\n\t\t\t</BrowserRouter>\n\t\t</Context>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nconst app = (\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>\n)\n\nReactDOM.render(app, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}